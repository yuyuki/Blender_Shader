WEBVTT

0
00:00:00.240 --> 00:00:04.150
I want to start by giving you a definition of what procedural shading even means.

1
00:00:04.160 --> 00:00:09.060
If you never heard of the word procedural or not familiar with what exactly it means.

2
00:00:09.540 --> 00:00:12.960
You can think of it as being generated by a set of rules.

3
00:00:13.440 --> 00:00:17.180
That means that the job of the artist creating such a procedural

4
00:00:17.180 --> 00:00:21.210
piece of content lies in defining those rules and the process,

5
00:00:21.210 --> 00:00:22.170
how it's generated.

6
00:00:22.170 --> 00:00:24.920
Rather than explicitly creating it by hand.

7
00:00:24.930 --> 00:00:26.990
Instead of baking the cake yourself,

8
00:00:27.000 --> 00:00:31.260
you create the recipe and give it to your computer to handle the baking for you.

9
00:00:31.640 --> 00:00:36.290
This shifts the required way of thinking and to a more technical direction,

10
00:00:36.290 --> 00:00:38.460
but it has several advantages compared

11
00:00:38.460 --> 00:00:41.750
to the traditional approach that nondestructive workflow

12
00:00:41.750 --> 00:00:45.600
makes it possible to make changes at any point of the process.

13
00:00:45.600 --> 00:00:48.200
And introducing randomness enables you to

14
00:00:48.200 --> 00:00:51.650
make iterations with random variations easily.

15
00:00:51.740 --> 00:00:55.350
Oftentimes it is a valid option to combine a

16
00:00:55.350 --> 00:00:59.420
procedural workflow with elements that are not procedurally created.

17
00:00:59.430 --> 00:01:01.270
That allows the artist to have

18
00:01:01.280 --> 00:01:04.569
precise control over some important artistic decisions

19
00:01:04.580 --> 00:01:07.390
while leaving less important aspects that can

20
00:01:07.390 --> 00:01:09.900
be automated to the procedural algorithm.

21
00:01:09.910 --> 00:01:15.110
While technically you can procedural eyes any part of an artistic workflow,

22
00:01:15.120 --> 00:01:18.250
it is always a good idea to weigh the anticipated

23
00:01:18.250 --> 00:01:22.050
benefits against the additional effort that it takes to set up

24
00:01:22.240 --> 00:01:27.370
a good procedural workflow allows for some level of manual art direction.

25
00:01:27.390 --> 00:01:28.510
As I said before,

26
00:01:28.520 --> 00:01:32.330
This course will handle the topic of procedural shading in particular.

27
00:01:32.370 --> 00:01:35.860
In other words how a surface looks and reacts to light

28
00:01:36.240 --> 00:01:39.470
while I will cover the basics of shading in general a

29
00:01:39.470 --> 00:01:42.990
decent knowledge of how shading works will definitely help you.

30
00:01:43.000 --> 00:01:46.400
The main focus of this course will be transitioning to a procedural

31
00:01:46.400 --> 00:01:49.680
workflow for shading to give you a more hands on approach.

32
00:01:49.680 --> 00:01:51.260
Let's take a look at the example scene

33
00:01:51.740 --> 00:01:54.480
in the example scene you can see that on the left,

34
00:01:54.480 --> 00:01:57.110
we have the view port which you can switch into E

35
00:01:57.110 --> 00:02:01.550
V rendering by holding down said and selecting the material preview.

36
00:02:01.560 --> 00:02:03.610
The first time you go into this view mode,

37
00:02:03.690 --> 00:02:09.009
every has to compile all the shader is in the scene and that can take quite a while.

38
00:02:09.020 --> 00:02:10.850
I do have to give a disclaimer here.

39
00:02:11.039 --> 00:02:14.840
These fully procedural shader czar, quite heavy to compute,

40
00:02:14.850 --> 00:02:17.810
especially because they are quite complex at times.

41
00:02:17.820 --> 00:02:21.270
This means that the performance relies quite heavily on

42
00:02:21.270 --> 00:02:24.030
your graphics card and depending on your machine,

43
00:02:24.040 --> 00:02:26.840
it might not be able to compile all the shakers.

44
00:02:26.850 --> 00:02:29.960
That is why I made a simplified version of the scene.

45
00:02:30.140 --> 00:02:32.070
That has a bunch of tweaks making the

46
00:02:32.070 --> 00:02:35.560
shakers less complex and increases the performance.

47
00:02:35.640 --> 00:02:40.370
The changes take away from the quality a bit, but they are not too drastic.

48
00:02:40.410 --> 00:02:43.460
This simplified scene should be able to run on older graphics

49
00:02:43.460 --> 00:02:47.100
cards as well even though it might not be super smooth.

50
00:02:47.110 --> 00:02:50.760
Once the traders are compiled though you can just take a look around the scene.

51
00:02:50.940 --> 00:02:52.780
If you play back the animation,

52
00:02:52.790 --> 00:02:55.950
you can see that a few of the shakers are animated as well.

53
00:02:56.140 --> 00:03:00.510
You can also just click around on different objects and see the no trees

54
00:03:00.510 --> 00:03:04.890
popping up that create their shade ear's no image textures are used here.

55
00:03:04.900 --> 00:03:07.500
Every shader is made up only of notes.

56
00:03:07.940 --> 00:03:13.380
Some of these no trees are quite extensive but they are built step by step and we

57
00:03:13.380 --> 00:03:15.910
will take a look at all those individual steps

58
00:03:15.920 --> 00:03:18.760
throughout this course to understand how it all works

59
00:03:19.040 --> 00:03:19.680
for Now,

60
00:03:19.690 --> 00:03:22.810
you can just browse through the shakers and play around with

61
00:03:22.810 --> 00:03:25.850
all those parameters and take a look at what happens.

62
00:03:26.340 --> 00:03:28.270
You can see that the changes that you are

63
00:03:28.270 --> 00:03:31.810
making are updating in real time because of Eve

64
00:03:31.950 --> 00:03:35.280
and the procedural set up means that every parameter

65
00:03:35.280 --> 00:03:38.670
in the whole no tree influences the resulting shader,

66
00:03:38.720 --> 00:03:40.260
nothing is fixed.

67
00:03:40.940 --> 00:03:46.060
Another benefit that I mentioned is automatically creating random variations.

68
00:03:46.440 --> 00:03:49.260
For example, if I just duplicate these pillows here,

69
00:03:49.740 --> 00:03:52.460
each one has a different variation of the pattern.

70
00:03:52.940 --> 00:03:56.880
I hope this example scene illustrates a bit better what it means to work

71
00:03:56.880 --> 00:04:00.460
with Procedural shakers and blender and it gets you excited for this course.

72
00:04:00.840 --> 00:04:05.660
Don't let these no trees intimidate you were going to go over it step by step.

73
00:04:06.140 --> 00:04:08.750
They usually don't have to be understood as a whole

74
00:04:09.140 --> 00:04:11.380
but can be broken down in simple chunks