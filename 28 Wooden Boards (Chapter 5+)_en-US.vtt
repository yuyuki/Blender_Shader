WEBVTT

0
00:00:00.340 --> 00:00:02.100
Hello and welcome to the next work.

1
00:00:02.100 --> 00:00:03.080
For example,

2
00:00:03.160 --> 00:00:07.150
in this video again to take a look at how to create this wooden floorboard trader

3
00:00:07.540 --> 00:00:09.440
and I'm going to show you every single step of the

4
00:00:09.440 --> 00:00:12.850
way of how to create this pattern and the whole shader

5
00:00:13.740 --> 00:00:18.070
as you can see the no tree is quite elaborate as with the last work,

6
00:00:18.070 --> 00:00:20.360
for example what you're going to take a step,

7
00:00:22.240 --> 00:00:25.750
but we're going to take each step at a time and go through the whole tree

8
00:00:26.140 --> 00:00:27.660
And as you can see

9
00:00:28.240 --> 00:00:33.850
at the very core of this shader is the note group that is called advanced bricks,

10
00:00:34.840 --> 00:00:37.360
which will also create in this video.

11
00:00:38.040 --> 00:00:43.260
It looks like this and gives the shade of the basic pattern that it uses

12
00:00:43.840 --> 00:00:46.780
and a bunch of useful outputs that are

13
00:00:46.780 --> 00:00:49.450
used by different parts of the remaining shader.

14
00:00:50.240 --> 00:00:53.310
So because this work for example is mainly

15
00:00:53.310 --> 00:00:57.040
leaned onto the chapter of the module setup.

16
00:00:57.050 --> 00:01:00.760
This is what we're mostly going to be focusing on how to set up this

17
00:01:01.240 --> 00:01:03.160
particular pattern and no group

18
00:01:04.540 --> 00:01:07.160
and then going from there how to create the rest of the

19
00:01:07.160 --> 00:01:10.860
shader using the information that we gain from this note group.

20
00:01:11.640 --> 00:01:12.480
So first,

21
00:01:12.480 --> 00:01:16.850
now I want to show you some of the functionality of this note group right away so you

22
00:01:16.850 --> 00:01:19.330
already know what I'm going for which will make

23
00:01:19.330 --> 00:01:21.660
the explanation is a bit easier to follow.

24
00:01:22.240 --> 00:01:24.270
So just like every texture,

25
00:01:24.270 --> 00:01:29.760
this note group takes the vector input and returns a texture

26
00:01:30.940 --> 00:01:33.260
here. Those are a couple of different outputs.

27
00:01:33.260 --> 00:01:37.360
The first one just being a height map depending on the parameters that you plug in.

28
00:01:38.440 --> 00:01:41.830
The second one is a mask for the mortar between the

29
00:01:41.830 --> 00:01:46.150
boards which you can also specify the size of and here

30
00:01:47.440 --> 00:01:52.150
then there is the position of the cells that are creating the boards

31
00:01:52.640 --> 00:01:53.970
they can use as I.

32
00:01:53.970 --> 00:01:59.260
Ds Purcell to create different effects that change from board to board.

33
00:01:59.940 --> 00:02:07.160
Then there is the cell U. V. S which go from 0 to 1 in both the X and the Y axis for each cell

34
00:02:07.640 --> 00:02:12.160
which you can use to map textures on top of each individual board.

35
00:02:12.540 --> 00:02:15.210
Then there's a random RGB output that gives you

36
00:02:15.210 --> 00:02:19.050
a different colour poor board to add some randomization

37
00:02:19.540 --> 00:02:22.860
and then there's also a dimension output which is

38
00:02:22.870 --> 00:02:26.300
simply the inputs for with the height of the

39
00:02:26.300 --> 00:02:29.620
board's packed into a vector which is useful as

40
00:02:29.620 --> 00:02:31.660
well for some effects that we're going to create

41
00:02:32.340 --> 00:02:35.960
now regarding the inputs. There is the with

42
00:02:36.540 --> 00:02:38.360
and height of the boards,

43
00:02:40.540 --> 00:02:42.250
the mortar size,

44
00:02:43.940 --> 00:02:47.750
the corner radius to smooth the corners of the boards.

45
00:02:49.140 --> 00:02:52.710
Then there's a bevel input that is driven with a map right now.

46
00:02:52.720 --> 00:02:53.780
But if I remove that,

47
00:02:53.780 --> 00:02:58.520
you can see how you can simply drive the bevel effect of the board.

48
00:02:58.530 --> 00:02:59.460
The height map.

49
00:02:59.940 --> 00:03:02.060
And there is a repeated offset

50
00:03:02.840 --> 00:03:05.360
which right now is set to two which is

51
00:03:05.360 --> 00:03:10.190
the frequency of how the boards are regularly shifted.

52
00:03:10.190 --> 00:03:11.800
And as you can see in this pattern right now,

53
00:03:11.800 --> 00:03:17.860
every board is shift by half its length for every second row.

54
00:03:18.340 --> 00:03:21.550
And this is pretty much the frequency of how many rolls

55
00:03:21.550 --> 00:03:25.150
it takes until a board is shifted by its full length.

56
00:03:25.540 --> 00:03:27.760
So if I just put this to three

57
00:03:28.740 --> 00:03:30.960
you can see how it staggers up

58
00:03:31.540 --> 00:03:33.360
And putting it to one.

59
00:03:34.540 --> 00:03:37.730
We'll give you know, regular offset at all.

60
00:03:37.740 --> 00:03:40.260
The only thing left here is the random offset

61
00:03:41.740 --> 00:03:46.360
and if I put this to zero you can see that we have only the regular asset working.

62
00:03:47.940 --> 00:03:51.450
And the random offset is on a scale from 0 to 1

63
00:03:52.640 --> 00:03:53.440
between

64
00:03:53.730 --> 00:03:54.860
no offset at all

65
00:03:55.440 --> 00:03:56.160
and

66
00:03:57.040 --> 00:04:01.260
a full random offset which means that some boards can be

67
00:04:01.640 --> 00:04:05.470
displaced by the whole length but that is dependent on the

68
00:04:05.480 --> 00:04:08.960
repeated offset as well as when I set this to to

69
00:04:09.440 --> 00:04:12.390
the maximum random offset these boards can get

70
00:04:12.540 --> 00:04:13.760
is half the length.

71
00:04:15.440 --> 00:04:17.990
So this random ization is less of an effect

72
00:04:18.000 --> 00:04:22.250
to maintain the overall look of these effects.

73
00:04:23.740 --> 00:04:24.360
And yeah,

74
00:04:24.360 --> 00:04:27.570
this is basically what this note group is doing and

75
00:04:27.570 --> 00:04:29.760
what we are going to set up in the video.

76
00:04:30.940 --> 00:04:34.450
The rest of the shader in general. You have already seen in the example scene,

77
00:04:34.940 --> 00:04:39.690
what I added for this video is the no troop which we're going to focus on.

78
00:04:39.700 --> 00:04:42.050
So at this point let's just dive into it.

79
00:04:43.340 --> 00:04:46.330
The first thing again is that I'm just deleting

80
00:04:46.330 --> 00:04:49.960
this material so we start with a blank canvas

81
00:04:51.140 --> 00:04:52.850
and add a new material

82
00:04:53.340 --> 00:04:56.440
but for now again just ignore this principle

83
00:04:56.440 --> 00:05:00.060
be sdf and start creating the base pattern.

84
00:05:00.440 --> 00:05:05.260
What I'm starting with to create a pattern is as always the input coordinates

85
00:05:06.540 --> 00:05:08.960
here, I'm just picking the hue the map

86
00:05:10.240 --> 00:05:13.360
Which just goes from 0 to 1 and X&Y on the plane.

87
00:05:15.640 --> 00:05:17.610
And first I'm going to start and create

88
00:05:17.610 --> 00:05:20.760
this pattern in the very simplest way possible.

89
00:05:21.840 --> 00:05:27.260
So what I want to add up with is a pattern of rectangular cells

90
00:05:28.240 --> 00:05:31.660
where can drive the width and length with parameters.

91
00:05:33.140 --> 00:05:38.360
So I'll already add in the width and length as input parameters here.

92
00:05:40.340 --> 00:05:40.540
Yeah,

93
00:05:40.940 --> 00:05:45.860
I'm going to name these inputs as well. So later I'm going to know how to work with them

94
00:05:47.240 --> 00:05:49.550
and I'm going to put them into a victory

95
00:05:49.940 --> 00:05:51.860
to have easier control over them.

96
00:05:53.140 --> 00:05:54.660
And now

97
00:05:55.540 --> 00:06:00.660
I'm going to work with those UV coordinates by using a vector math known,

98
00:06:01.240 --> 00:06:04.150
I'm going to use the same trick as always

99
00:06:05.040 --> 00:06:05.850
by just

100
00:06:06.740 --> 00:06:10.550
scaling the Huey map and then using the fraction operation.

101
00:06:10.560 --> 00:06:15.260
But here I'm not going to do the scaling with a multiply or scale node

102
00:06:15.840 --> 00:06:17.660
but I'm going to use the divide. Note

103
00:06:19.940 --> 00:06:21.920
the reason for that is that I want to

104
00:06:21.930 --> 00:06:26.060
be able to specify the width and length as dimensions

105
00:06:26.640 --> 00:06:31.050
rather than the frequency of how many plants there are going to be on the plane.

106
00:06:32.140 --> 00:06:36.660
So it's pretty much the in various operation that I have to use here,

107
00:06:36.660 --> 00:06:37.660
which is dividing.

108
00:06:38.640 --> 00:06:41.550
And as you can see when I scaled down with here,

109
00:06:42.140 --> 00:06:45.650
the values of this scale map actually getting higher,

110
00:06:45.650 --> 00:06:48.080
which is exactly what I need because then

111
00:06:48.080 --> 00:06:50.560
the fraction operation will create more cells.

112
00:06:51.640 --> 00:06:53.950
So let's just add in the fraction operation

113
00:06:56.640 --> 00:07:00.860
and now we can see that's already working pretty much as we expected,

114
00:07:01.640 --> 00:07:03.560
can change the width and length

115
00:07:04.240 --> 00:07:08.650
and it reacts accordingly. So if I just had both, the one just to see

116
00:07:09.340 --> 00:07:10.750
It is exactly one cell.

117
00:07:11.640 --> 00:07:13.860
Seeing them both to 0.5.

118
00:07:14.340 --> 00:07:14.660
Mhm.

119
00:07:15.540 --> 00:07:18.960
They are exactly half of this plane long and wide.

120
00:07:19.940 --> 00:07:22.980
So let's now go for something that looks a little bit more like

121
00:07:22.980 --> 00:07:26.560
what we are going for to have more of an idea what's happening

122
00:07:27.840 --> 00:07:30.660
and a little bit more like this aspect ratio.

123
00:07:34.740 --> 00:07:38.660
And yeah, that's the basis of the pattern. Already. Pretty much done.

124
00:07:39.040 --> 00:07:43.120
Now, first I want to talk about the offset, parole now an offset.

125
00:07:43.120 --> 00:07:45.540
As I explained multiple times throughout the course

126
00:07:45.550 --> 00:07:49.860
is achieved by adding or subtracting coordinate factors.

127
00:07:50.240 --> 00:07:54.650
So if I just before I'm dividing here, use another vector math. No, it's set to add.

128
00:07:55.830 --> 00:07:57.750
I can shift these balls around.

129
00:08:00.240 --> 00:08:06.660
The thing here is that I want this shifting value to be dependent on the rolls.

130
00:08:07.640 --> 00:08:10.250
So within one roll of boards

131
00:08:11.140 --> 00:08:13.450
it should all be the same offset

132
00:08:14.440 --> 00:08:16.530
but between different rows,

133
00:08:16.750 --> 00:08:18.160
it should be varying.

134
00:08:18.640 --> 00:08:23.050
So before we split this plane in the individual cells of the boards.

135
00:08:23.440 --> 00:08:27.660
I want to first split them in individual cells for the rose.

136
00:08:28.040 --> 00:08:30.860
And the way I'm doing that is simply using

137
00:08:31.540 --> 00:08:33.360
a separate X. Y. Z. No

138
00:08:33.940 --> 00:08:38.159
because here we only need one dimension which is the X. Dimension.

139
00:08:38.740 --> 00:08:41.260
And then we can just use a math note

140
00:08:41.840 --> 00:08:43.150
set to snap.

141
00:08:44.940 --> 00:08:48.450
And as an instrument used the width of the boards.

142
00:08:49.130 --> 00:08:51.460
And as you can see now we have a different value

143
00:08:51.840 --> 00:08:53.460
for the individual roles.

144
00:08:54.440 --> 00:08:58.160
If I just plug this snapped coordinates into the ad

145
00:08:58.740 --> 00:08:59.650
operation

146
00:08:59.790 --> 00:09:02.760
and you can already see how these roles are being shifted.

147
00:09:03.640 --> 00:09:06.460
Now we only have to control how this shifting works

148
00:09:07.440 --> 00:09:10.990
first I want to implement the regular offset and

149
00:09:10.990 --> 00:09:15.150
for that I'm going to scale up these snapped coordinates

150
00:09:15.740 --> 00:09:23.660
So that we have the index of Israel as a full value. So it counts from 0123

151
00:09:24.140 --> 00:09:27.040
instead of an increments of the width as

152
00:09:27.040 --> 00:09:30.460
it does right now to normalize these numbers,

153
00:09:30.840 --> 00:09:32.850
I'm going to just divide by the with

154
00:09:35.740 --> 00:09:38.640
because before we had zero widths,

155
00:09:38.960 --> 00:09:41.350
one with two widths and so on.

156
00:09:42.040 --> 00:09:45.550
And if I divide by that it's normalized to be 0123.

157
00:09:45.940 --> 00:09:49.060
And now to turn this into a irregular repetition

158
00:09:49.440 --> 00:09:52.460
I'll use another math notes set to Margallo

159
00:09:54.140 --> 00:09:58.160
and Modelo is very similar to the fraction operation

160
00:09:58.940 --> 00:10:01.160
but you can choose the maximum value

161
00:10:01.640 --> 00:10:03.860
So it does not wrap around after one

162
00:10:04.440 --> 00:10:07.760
but after the value that you choose as the second input.

163
00:10:08.840 --> 00:10:09.730
So

164
00:10:09.830 --> 00:10:11.560
instead of one, for example

165
00:10:11.940 --> 00:10:13.860
I can just choose to

166
00:10:15.240 --> 00:10:17.740
And then what is returned will be zero

167
00:10:18.070 --> 00:10:18.660
and 1.

168
00:10:19.540 --> 00:10:21.360
And then this index here is to

169
00:10:22.040 --> 00:10:24.650
so we'll wrap around give me zero again

170
00:10:25.540 --> 00:10:28.360
And then it goes on with 010101.

171
00:10:29.740 --> 00:10:31.060
If I say that this two or 3

172
00:10:32.340 --> 00:10:34.580
It'll give me 01

173
00:10:34.920 --> 00:10:35.660
and then two

174
00:10:36.040 --> 00:10:37.960
And wrap around again at three.

175
00:10:39.340 --> 00:10:42.250
And that can be done for all the other numbers as well.

176
00:10:43.240 --> 00:10:45.850
So I'm going to create another input node.

177
00:10:47.440 --> 00:10:49.600
The only problem right now is that all

178
00:10:49.600 --> 00:10:53.260
the values in between give me some weird artifacts

179
00:10:53.640 --> 00:10:54.560
I wish I don't want.

180
00:10:55.740 --> 00:11:00.450
So I'm going to include another operation set to round.

181
00:11:01.040 --> 00:11:05.560
So all the other numbers in between just get cut off two whole numbers

182
00:11:09.140 --> 00:11:11.360
that just makes it a little bit more user friendly.

183
00:11:12.340 --> 00:11:16.450
Now we only have to use this modular up to control the offset.

184
00:11:17.540 --> 00:11:21.260
So to do that I'll just use a combined X y z note

185
00:11:21.840 --> 00:11:23.460
and plug it into the

186
00:11:24.040 --> 00:11:25.150
why component.

187
00:11:26.340 --> 00:11:29.460
Because that's the direction the boards are going to be shifted in

188
00:11:31.040 --> 00:11:33.050
and then plug that into the ad input.

189
00:11:34.340 --> 00:11:37.550
But here we have to keep in mind what is actually happening with the values

190
00:11:37.940 --> 00:11:40.270
the vector map that we are adding.

191
00:11:40.270 --> 00:11:45.560
These vector on top right now is simply the UV map that has not been altered at all.

192
00:11:46.940 --> 00:11:50.960
And the values that we're adding are all multiples of one.

193
00:11:51.940 --> 00:11:57.160
So it's simply shifting the UV map by one hole size of a plane,

194
00:11:57.540 --> 00:11:59.160
which is not at all what we want.

195
00:11:59.840 --> 00:12:02.060
We want to shift the rose by

196
00:12:02.540 --> 00:12:06.860
halfs or thirds or quarters of the length of the boards.

197
00:12:07.840 --> 00:12:10.260
So there's two things we have to keep in mind

198
00:12:10.740 --> 00:12:14.060
first is the position where the vector is added

199
00:12:15.240 --> 00:12:18.360
right now. As I said, it's just to the UV map,

200
00:12:19.240 --> 00:12:23.050
but it should be after by dividing fully length

201
00:12:23.540 --> 00:12:25.460
to add it in the right unit.

202
00:12:26.140 --> 00:12:27.250
For the simple

203
00:12:27.460 --> 00:12:28.450
vector map,

204
00:12:28.840 --> 00:12:31.560
a unit is the size of the whole plane,

205
00:12:32.340 --> 00:12:35.770
but after dividing a unit is

206
00:12:35.870 --> 00:12:38.060
the size of the length of the boards.

207
00:12:38.540 --> 00:12:42.950
So as you can see if we add one here, nothing changes

208
00:12:43.340 --> 00:12:45.350
If we add .5

209
00:12:45.940 --> 00:12:49.150
is exactly shifted by half a board length.

210
00:12:49.640 --> 00:12:52.660
So this is the place we want to add a shift to.

211
00:12:53.240 --> 00:12:58.140
But there's also another thing we have to keep in mind which is that the values,

212
00:12:58.140 --> 00:13:00.760
as I said here are all increments of one.

213
00:13:01.840 --> 00:13:06.660
And so we have to divide this value as well by the frequency input.

214
00:13:08.040 --> 00:13:10.260
And as you can see now it works nicely

215
00:13:14.640 --> 00:13:16.560
at this point, I want to already start

216
00:13:17.040 --> 00:13:20.270
organizing the notes a little bit better but collapsing them

217
00:13:20.270 --> 00:13:24.660
when all the inputs are already driven with connected sockets

218
00:13:25.140 --> 00:13:27.960
and grouping them together by the functionality.

219
00:13:28.540 --> 00:13:31.150
So I just organized them as a stack of notes

220
00:13:31.670 --> 00:13:33.850
and at a frame to group them together.

221
00:13:34.440 --> 00:13:38.160
Now on top of the irregular offset, we also have the Iran um offset.

222
00:13:39.440 --> 00:13:40.850
And to get that

223
00:13:41.240 --> 00:13:45.950
I also use the snapped coordinates along the X axis

224
00:13:46.540 --> 00:13:49.750
to get a different random value for each role.

225
00:13:51.740 --> 00:13:55.850
And the random value is provided as always with the white noise texture

226
00:13:56.540 --> 00:13:59.750
here we only have one dimension to drive this with the

227
00:14:00.140 --> 00:14:01.160
X coordinates.

228
00:14:01.840 --> 00:14:06.250
So I'm just going to set this to one D. to increase the performance by a little bit

229
00:14:06.940 --> 00:14:10.960
but I still want to be able to change how these random values look like.

230
00:14:11.340 --> 00:14:15.360
So I also add in between an add node

231
00:14:16.840 --> 00:14:21.360
with which I can shift the values around. That gives me a different random behavior.

232
00:14:21.840 --> 00:14:26.400
Now we have random values between zero and one with this white noise texture value

233
00:14:26.400 --> 00:14:34.460
output and we can simply remap the values to do what we want by subtracting 0.5

234
00:14:37.040 --> 00:14:41.830
and adding another multiply node to be able to change the scale

235
00:14:41.830 --> 00:14:46.760
of the effect And for this scaling also create another input parameter.

236
00:14:47.440 --> 00:14:50.950
I just set it to 0.5 and call it a random offset

237
00:14:51.440 --> 00:14:53.290
and then just connected to the multiply node

238
00:14:54.040 --> 00:14:54.680
this value.

239
00:14:54.680 --> 00:14:58.540
Now we can essentially just add on top of the regular

240
00:14:58.540 --> 00:15:01.860
offset that we plugged into the combined X y Z note.

241
00:15:02.240 --> 00:15:04.420
So to make it a little bit more readable,

242
00:15:04.430 --> 00:15:08.060
I just remove this note from the frame and then using

243
00:15:08.070 --> 00:15:11.480
an ad note to just add the value and top,

244
00:15:11.490 --> 00:15:14.060
we don't need any control over these values here.

245
00:15:14.640 --> 00:15:15.960
So I just collapsed them

246
00:15:16.940 --> 00:15:19.660
and group them together as the random offset.

247
00:15:20.840 --> 00:15:23.070
And now we already have a coordinate map with

248
00:15:23.070 --> 00:15:28.250
a random offset and a regular offset with a frequency

249
00:15:29.740 --> 00:15:32.560
that we're going to be able to use for that floorboard shader.

250
00:15:33.440 --> 00:15:39.100
But the note group with the base texture is not only going to include this corner map,

251
00:15:39.110 --> 00:15:40.850
we need other outputs as well.

252
00:15:41.240 --> 00:15:44.060
Most importantly, there should be a height map.

253
00:15:45.040 --> 00:15:48.660
That height map can be created from these coordinates though.

254
00:15:49.040 --> 00:15:50.860
So let's start doing that. Now

255
00:15:51.440 --> 00:15:56.360
these coordinates here give us essentially a Hughley map per board

256
00:15:57.240 --> 00:16:03.360
Which goes from 0 to 1 in both acts and y direction for one cell.

257
00:16:04.040 --> 00:16:07.060
And what I want to create within these cells now

258
00:16:07.440 --> 00:16:12.260
are rectangles with rounded corners and they fall off

259
00:16:13.140 --> 00:16:16.050
That goes from 0 to 1 along an edge

260
00:16:16.540 --> 00:16:20.160
and there is a very nice and simple way to do that.

261
00:16:20.640 --> 00:16:23.660
First. We'll have to mirror these coronets in the center.

262
00:16:25.040 --> 00:16:27.470
So just duplicate this vector math, node

263
00:16:27.940 --> 00:16:29.460
said to subtract

264
00:16:30.240 --> 00:16:33.450
and subtract 0.5 and X and Y direction

265
00:16:33.940 --> 00:16:37.920
here, we are not going to bother about the is that component at all?

266
00:16:37.930 --> 00:16:43.240
As this texture is not going to work in a three dimensional space either way.

267
00:16:43.250 --> 00:16:46.660
That's just in the nature of how these floorboards work.

268
00:16:47.440 --> 00:16:52.080
There's no way around that really. You have to use some way of mapping the three D.

269
00:16:52.080 --> 00:16:57.380
Space into a two D. Space and you re coordinates are the easiest way to do so.

270
00:16:57.390 --> 00:16:59.200
But I'm going on a tangent here.

271
00:16:59.200 --> 00:17:03.220
So let's go back to the share then to mirror the coordinates.

272
00:17:03.230 --> 00:17:06.460
I use another vector math notes sent to absolute.

273
00:17:09.140 --> 00:17:15.170
And also I'm going to scale these vectors up by a factor of two

274
00:17:15.540 --> 00:17:20.849
To make sure that again the values go from 0 to 1 in both directions.

275
00:17:21.440 --> 00:17:25.160
And now we have to keep in mind where the cells on this map actually are

276
00:17:26.010 --> 00:17:27.950
these darkest spots

277
00:17:28.540 --> 00:17:33.760
where both X and Y component of the vector that we're seeing are approaching zero

278
00:17:34.440 --> 00:17:34.950
are

279
00:17:35.340 --> 00:17:37.670
exactly the center of the cells.

280
00:17:38.540 --> 00:17:42.170
As you can see when you, when I just flip between the two views

281
00:17:42.540 --> 00:17:44.370
but to create the height map,

282
00:17:44.500 --> 00:17:46.170
we want the exact opposite.

283
00:17:46.740 --> 00:17:51.960
They're going to be zero at the edge and then approach one for the century.

284
00:17:52.540 --> 00:17:55.050
So I'm just going to use another subtract note,

285
00:17:55.740 --> 00:17:58.560
butt plug this map into the second input

286
00:17:59.040 --> 00:18:01.050
and set the first input as

287
00:18:01.540 --> 00:18:02.280
one

288
00:18:02.420 --> 00:18:04.960
for X and Y component and zero for zero

289
00:18:06.240 --> 00:18:07.460
to invert

290
00:18:07.940 --> 00:18:08.770
the map we had

291
00:18:09.440 --> 00:18:12.950
and now we can start creating the planks from this pattern.

292
00:18:13.540 --> 00:18:17.670
I'm just going to start doing that by using a separate X Y, Z note

293
00:18:18.640 --> 00:18:21.410
and using the Excellent why component to create

294
00:18:21.680 --> 00:18:22.360
the shapes.

295
00:18:23.940 --> 00:18:28.670
I do that by creating another math node and setting it to a minimum.

296
00:18:29.540 --> 00:18:33.350
And as you can see this already kind of resembles what we are going for

297
00:18:33.740 --> 00:18:35.520
But there are a few problems with this

298
00:18:35.940 --> 00:18:38.460
as you can see it is simply stretched

299
00:18:38.840 --> 00:18:40.290
along the Y axis

300
00:18:40.740 --> 00:18:45.410
Going from 0-1 and 20 again on both axes.

301
00:18:45.420 --> 00:18:49.950
Without recognizing that the with is much shorter than the length of the boards.

302
00:18:50.440 --> 00:18:52.270
So to counter this effect,

303
00:18:53.440 --> 00:18:56.770
you can simply use yet another vector math known

304
00:18:57.540 --> 00:18:59.660
and setting it to multiply

305
00:19:00.440 --> 00:19:05.270
while multiplying with the dimension vector that we created way in the beginning.

306
00:19:06.140 --> 00:19:10.160
So let's just grab the output of this and plug it into the multiply node.

307
00:19:11.440 --> 00:19:13.770
And as you can see now it works much nicer.

308
00:19:14.540 --> 00:19:17.530
The reason for that is instead of going from 0

309
00:19:17.540 --> 00:19:21.920
to 1 independent on the actual scale on the plane.

310
00:19:21.930 --> 00:19:23.560
Now the values

311
00:19:24.240 --> 00:19:28.460
that this is giving us are dependent on the actual dimension.

312
00:19:29.040 --> 00:19:34.170
So the difference in length and with is actually respected here.

313
00:19:34.640 --> 00:19:36.910
That is a very important concept to understand

314
00:19:36.920 --> 00:19:39.260
which we are going to use multiple times.

315
00:19:40.040 --> 00:19:42.380
Now there are a couple of additional things that we

316
00:19:42.380 --> 00:19:44.860
can do to control how this is going to look

317
00:19:45.540 --> 00:19:48.660
1st. I want to be able to control the fall off.

318
00:19:49.340 --> 00:19:51.260
Well that I add another math node

319
00:19:51.640 --> 00:19:53.560
at the end here is set to divide

320
00:19:54.540 --> 00:20:00.560
And now I can specify the length of this gradient until the approaches one.

321
00:20:01.140 --> 00:20:04.770
Just try something very small like 0.02

322
00:20:06.440 --> 00:20:10.960
And then clamp this value so it stops when it approaches one

323
00:20:11.810 --> 00:20:13.270
and as you can see

324
00:20:14.940 --> 00:20:18.270
I have control over how this fall of works.

325
00:20:18.840 --> 00:20:20.910
Then also in the beginning I showed you

326
00:20:20.910 --> 00:20:24.660
that I want these planks to have around corners

327
00:20:25.140 --> 00:20:28.000
and there is a very easy way to achieve this.

328
00:20:28.540 --> 00:20:31.170
We can't just instead of the minimum operation,

329
00:20:31.640 --> 00:20:33.860
use the smooth minimum operation.

330
00:20:35.040 --> 00:20:37.350
Now we have very nice control

331
00:20:37.740 --> 00:20:42.270
over how they are smoothed at this corner where they are mixed together

332
00:20:42.940 --> 00:20:46.170
and this is already looking very close to what we are going for.

333
00:20:47.040 --> 00:20:49.860
There's one more thing as a functionality that

334
00:20:49.860 --> 00:20:52.050
I want to add to creating the height map

335
00:20:52.440 --> 00:20:57.260
which is adding a visible mortar right now it is just

336
00:20:57.380 --> 00:20:59.270
infinitely thin on the edges.

337
00:20:59.840 --> 00:21:03.350
So what I do to achieve this is at another

338
00:21:04.040 --> 00:21:05.980
vector math noting here,

339
00:21:05.990 --> 00:21:11.170
which if you remember is the vector map that we are using to create the pattern

340
00:21:12.340 --> 00:21:15.270
and then simply subtracting from that,

341
00:21:16.140 --> 00:21:18.060
essentially shifting it

342
00:21:22.140 --> 00:21:24.140
now hear this might not look like much,

343
00:21:24.140 --> 00:21:27.270
but if we take a look at the resulting height map,

344
00:21:29.040 --> 00:21:34.400
you can see that this very nicely adds a thickness to the mortar.

345
00:21:34.410 --> 00:21:38.270
Now to keep track of what we are controlling in this height map,

346
00:21:38.640 --> 00:21:41.550
I'm going to add three more input values

347
00:21:44.140 --> 00:21:44.350
and

348
00:21:45.840 --> 00:21:47.270
one is the mortar,

349
00:21:48.240 --> 00:21:50.060
I just said it to zero for now,

350
00:21:50.440 --> 00:21:52.770
one for the round corners

351
00:21:53.640 --> 00:21:57.060
and one for the gradient which is the bevel

352
00:21:58.140 --> 00:22:03.270
and now we actually have most of the functionality of our note group put together.

353
00:22:03.840 --> 00:22:06.170
I'll just do some more adjustments to make it more readable

354
00:22:08.040 --> 00:22:10.790
to already get a mask of where the mortar is going

355
00:22:10.790 --> 00:22:13.050
to be which is one of the outputs I want.

356
00:22:13.520 --> 00:22:16.350
I'll just take the output from the smooth minimum

357
00:22:16.740 --> 00:22:20.760
Where the values are not yet scaled and clamped between zero and 1

358
00:22:21.640 --> 00:22:25.770
And check for any values that are less than zero.

359
00:22:29.040 --> 00:22:31.670
And as you can see if I increase the mortar scale

360
00:22:32.340 --> 00:22:33.560
I get a nice mask

361
00:22:34.440 --> 00:22:37.050
So let's see what other outputs we want from this nursery

362
00:22:38.840 --> 00:22:39.650
there is

363
00:22:40.030 --> 00:22:42.460
instead of the cell U V. S

364
00:22:42.840 --> 00:22:45.170
also the sell position

365
00:22:46.640 --> 00:22:50.140
and we can get that by simply instead of using the fraction

366
00:22:50.140 --> 00:22:54.770
operation using a snap operation set to an instrument of one.

367
00:22:59.440 --> 00:23:05.170
But you have to be a little bit careful here because this is not the accurate position

368
00:23:06.640 --> 00:23:09.360
as these roles are offset

369
00:23:12.340 --> 00:23:14.560
and as you can see when we're offsetting

370
00:23:15.340 --> 00:23:20.670
the actual values that this map here has are not changing Purcell

371
00:23:21.140 --> 00:23:25.480
which they should if these values would reflect the actual position.

372
00:23:25.490 --> 00:23:31.160
So after we add this victory on the coordinates we have to subtract it back

373
00:23:32.340 --> 00:23:34.260
just using the same vector

374
00:23:34.640 --> 00:23:36.940
and you can see that it reflects the position

375
00:23:36.940 --> 00:23:40.670
much more accurately as I change this shift value.

376
00:23:43.440 --> 00:23:44.850
But on top of this

377
00:23:45.940 --> 00:23:50.770
remember in the beginning we also divided by the dimension vector

378
00:23:51.940 --> 00:23:54.360
to normalize this vector map

379
00:23:55.340 --> 00:23:57.460
for the size of the board.

380
00:23:59.040 --> 00:24:01.350
So after we divided in the first place

381
00:24:01.940 --> 00:24:04.060
we have to multiply it back on top

382
00:24:04.650 --> 00:24:05.350
in the end

383
00:24:08.940 --> 00:24:10.950
just change this to multiply

384
00:24:11.840 --> 00:24:16.460
and there you go. Now it is much more accurate to the actual UV map

385
00:24:18.940 --> 00:24:19.560
and it is

386
00:24:19.940 --> 00:24:23.060
also dependent on the parameters

387
00:24:24.540 --> 00:24:28.170
so this we can use as the actual output for the position.

388
00:24:29.640 --> 00:24:32.460
Then also I want a random color

389
00:24:33.140 --> 00:24:36.050
which I'm just going to use another white noise texture for.

390
00:24:36.940 --> 00:24:40.170
But here I am not simply going to use the position

391
00:24:41.040 --> 00:24:42.060
because then

392
00:24:42.440 --> 00:24:45.260
the values change depending on the shift

393
00:24:46.940 --> 00:24:48.920
I wanted to be more reproducible

394
00:24:49.190 --> 00:24:52.960
and so instead of the adapted position vector,

395
00:24:53.340 --> 00:24:56.150
I'm just going to use the snap values.

396
00:24:56.160 --> 00:24:59.670
Then it's going to be consistent with different shifts

397
00:25:02.240 --> 00:25:06.930
and yeah that is actually all the functionality that we need for the note group done.

398
00:25:06.940 --> 00:25:10.060
So before we move on to anything else

399
00:25:10.610 --> 00:25:11.560
I want to

400
00:25:11.940 --> 00:25:16.560
put this note tree, what we have right now into a functioning note group.

401
00:25:17.140 --> 00:25:19.130
So that's beyond what we have

402
00:25:19.270 --> 00:25:22.450
identified all the inputs and outputs

403
00:25:22.940 --> 00:25:24.260
here we have the

404
00:25:24.840 --> 00:25:28.020
input vector map which is going to be one input.

405
00:25:28.030 --> 00:25:30.360
So I'm just going to string it together like this,

406
00:25:31.440 --> 00:25:37.560
then the width and length which will also have just one input each,

407
00:25:40.540 --> 00:25:43.450
the frequency for the irregular offset,

408
00:25:44.840 --> 00:25:46.360
then the Iran um offset

409
00:25:47.240 --> 00:25:52.460
and later on here the different parameters to control the height map.

410
00:25:53.540 --> 00:25:59.040
I'm just going to drag these all the way over here and put them up like this.

411
00:25:59.050 --> 00:26:01.460
Everything else that we have in the notary

412
00:26:02.040 --> 00:26:05.020
is not crucial to be controlled from the outside.

413
00:26:05.030 --> 00:26:07.850
So this is a nice way to have all the

414
00:26:07.850 --> 00:26:12.070
functionality of this tree listed up as the input parameters.

415
00:26:12.080 --> 00:26:13.770
And now for the outputs,

416
00:26:13.770 --> 00:26:16.660
I also want to do something similar by using reroute

417
00:26:16.660 --> 00:26:20.760
nodes in the way I already did for this output here

418
00:26:22.140 --> 00:26:26.960
by just selecting the op ed that I want to have with the urinal

419
00:26:28.540 --> 00:26:31.060
and then dragging the shift and right mouse button

420
00:26:31.540 --> 00:26:36.680
to create a reroute note and lining them up just as the inputs.

421
00:26:36.690 --> 00:26:38.760
It's good to be the mortar mask,

422
00:26:38.770 --> 00:26:42.700
the height mask and then a little bit further back sell

423
00:26:42.700 --> 00:26:46.770
you vis And also I want the dimension as an output.

424
00:26:47.140 --> 00:26:49.450
We can organize and name these later on.

425
00:26:49.940 --> 00:26:52.060
So now without further ado let's just

426
00:26:52.840 --> 00:26:55.560
grab all the notes that are going to be part of the tree

427
00:26:56.140 --> 00:26:59.260
which excludes the inputs and outputs.

428
00:27:00.460 --> 00:27:01.770
And press control G.

429
00:27:02.540 --> 00:27:05.270
And now there's no group already has all it needs

430
00:27:05.940 --> 00:27:08.790
but we need to clean something up to make it more

431
00:27:08.790 --> 00:27:13.210
intuitive and actually workable because right now all these values,

432
00:27:13.210 --> 00:27:14.460
victories and colours

433
00:27:14.940 --> 00:27:20.670
don't give any insight our hint as how they work. So take a take a look back

434
00:27:21.040 --> 00:27:23.450
and see which input is which

435
00:27:23.630 --> 00:27:27.460
so to organize the inputs and outputs in the note group itself.

436
00:27:27.940 --> 00:27:33.060
Just pressing end to open the properties and go into the note properties

437
00:27:34.240 --> 00:27:36.060
to change the inputs around,

438
00:27:36.640 --> 00:27:40.420
let's just simply organize these in the same order

439
00:27:40.420 --> 00:27:42.960
as they are outside of the group node.

440
00:27:45.140 --> 00:27:48.560
There we go. Now we have a better overview of how it works

441
00:27:49.240 --> 00:27:53.220
and for the outputs we don't even actually have to do that because we

442
00:27:53.220 --> 00:27:57.270
can just connect the view and old and immediately see what map this is.

443
00:27:57.740 --> 00:28:03.050
So for now I'll just quickly go over everything and just rename it accordingly.

444
00:28:23.140 --> 00:28:27.530
Okay, now everything is renamed, I did run into one issue though,

445
00:28:27.540 --> 00:28:29.980
which is that the mortar input,

446
00:28:29.990 --> 00:28:34.660
which is supposed to be a value is shown as a vector input.

447
00:28:35.540 --> 00:28:38.270
The reason for that is that on the inside

448
00:28:39.440 --> 00:28:43.060
this is connected to a vector input.

449
00:28:43.540 --> 00:28:47.350
And so the note group thinks that is supposed to be a vector as well.

450
00:28:48.140 --> 00:28:53.770
To change that, we have to simply add a new socket by connecting it to any value input

451
00:28:54.740 --> 00:28:58.960
and then replacing it with the mortar connection.

452
00:29:08.240 --> 00:29:08.440
Yeah.

453
00:29:10.740 --> 00:29:11.270
And

454
00:29:11.940 --> 00:29:13.670
as you can see now it is fixed

455
00:29:14.540 --> 00:29:16.270
and it still works the same way,

456
00:29:18.140 --> 00:29:20.450
let's just give this note group name as well.

457
00:29:21.240 --> 00:29:21.450
Mhm

458
00:29:23.340 --> 00:29:23.760
mm hmm.

459
00:29:24.440 --> 00:29:28.960
And now we can actually go ahead and disconnect all of these sockets.

460
00:29:30.640 --> 00:29:32.350
The problem is that now

461
00:29:33.040 --> 00:29:38.460
all of the values are set to the values that they were connected to on the inside,

462
00:29:38.940 --> 00:29:41.270
not to the values of these notes here.

463
00:29:41.640 --> 00:29:43.560
So we just have to quickly go over that.

464
00:29:44.040 --> 00:29:49.460
And one thing we cannot disconnect is the um app because it is still going to be needed

465
00:29:50.440 --> 00:29:54.760
but now everything is working the same way so I can just delete all these nodes.

466
00:29:56.840 --> 00:30:01.760
But another thing that we should change is the properties of these inputs.

467
00:30:02.840 --> 00:30:05.790
Because as I showed you in the video about note groups,

468
00:30:05.800 --> 00:30:10.250
you can specify the default values and the maximum

469
00:30:10.250 --> 00:30:12.770
and minimum values of all of your inputs.

470
00:30:13.440 --> 00:30:18.170
Also we can hide the input of the vector map

471
00:30:18.640 --> 00:30:20.090
when nothing is connected.

472
00:30:20.740 --> 00:30:24.160
So it is already implied that a map would be needed.

473
00:30:24.540 --> 00:30:26.490
We can do that by simply hiding

474
00:30:26.680 --> 00:30:27.560
the value

475
00:30:28.630 --> 00:30:29.620
in the interface.

476
00:30:30.040 --> 00:30:35.460
So now let's just go over the default values and the maximum and minimum limits

477
00:30:36.040 --> 00:30:37.470
for the default values.

478
00:30:37.470 --> 00:30:40.660
I'm just going to choose the exact values that we have right now.

479
00:30:46.240 --> 00:30:48.530
Now that the defaults are set

480
00:30:48.650 --> 00:30:50.050
to take a look at the limits

481
00:30:51.340 --> 00:30:56.180
for the width and length, a negative scale does not make any sense.

482
00:30:56.180 --> 00:30:59.950
I'm just going to set the minimum values for both at zero.

483
00:31:02.340 --> 00:31:02.550
Mhm.

484
00:31:03.040 --> 00:31:05.060
But for the maximum of the input,

485
00:31:05.170 --> 00:31:07.270
I don't want to impose any restrictions at all

486
00:31:07.940 --> 00:31:11.860
For the frequency, if you remember a frequency of one

487
00:31:12.240 --> 00:31:14.550
was already the minimum you could get

488
00:31:16.940 --> 00:31:18.810
anything lower. Doesn't make any sense.

489
00:31:19.340 --> 00:31:23.060
So here I want to set the minimum S one

490
00:31:24.940 --> 00:31:28.840
the random offset is bound to the scale

491
00:31:29.240 --> 00:31:30.060
of the boards.

492
00:31:30.940 --> 00:31:34.560
So here I want to actually limit it between zero and 1

493
00:31:37.040 --> 00:31:40.060
to have basically a percentage of randomness.

494
00:31:40.640 --> 00:31:46.960
And at this point to make clear for the user that this is a percentage.

495
00:31:47.640 --> 00:31:50.670
I'm actually also going to use another

496
00:31:51.040 --> 00:31:52.860
type of interface here.

497
00:31:53.740 --> 00:31:57.620
I've also showed this in the video about not groups but for values,

498
00:31:57.620 --> 00:31:59.770
there is also an additional way

499
00:32:00.140 --> 00:32:02.060
of displaying the input.

500
00:32:03.140 --> 00:32:04.970
For example, in the mix, Arduino,

501
00:32:04.980 --> 00:32:08.080
you have this factor input which has a blue

502
00:32:08.080 --> 00:32:11.450
bar that fills up as your value approaches one.

503
00:32:13.140 --> 00:32:16.350
This very clearly shows you that one is the maximum

504
00:32:16.740 --> 00:32:21.560
and you can essentially see the percentage of this value right in the interface.

505
00:32:22.240 --> 00:32:25.770
So to get this interface, I'm going to create a new input

506
00:32:26.440 --> 00:32:29.350
And replace that one with the random offset.

507
00:32:33.740 --> 00:32:34.760
And as you can see

508
00:32:35.140 --> 00:32:38.460
in the interface now we have this nice interaction.

509
00:32:42.040 --> 00:32:46.170
This also works by the way if you just change the limits to anything you want

510
00:32:50.240 --> 00:32:52.270
and for the remaining three inputs,

511
00:32:52.940 --> 00:32:57.260
The only thing I want to change as well here is setting the minimum 20.

512
00:32:58.240 --> 00:33:00.760
And that is the note group. Almost done.

513
00:33:00.830 --> 00:33:04.490
The last thing I want to do is just order these inputs

514
00:33:04.490 --> 00:33:07.660
and outputs in a way that makes a little bit more sense

515
00:33:08.340 --> 00:33:11.110
by sorting them a little bit by importance

516
00:33:11.210 --> 00:33:13.770
and grouping them by their functionality

517
00:33:20.340 --> 00:33:23.510
and that is the whole workflow for the heart of the shader.

518
00:33:23.510 --> 00:33:26.850
Done and gives us this nice no group

519
00:33:27.540 --> 00:33:31.350
with the height map and all the other outputs we need for the shader.

520
00:33:32.240 --> 00:33:34.440
This note group now gives us all the information that

521
00:33:34.440 --> 00:33:36.260
we need to create the rest of the shader.

522
00:33:36.640 --> 00:33:37.960
So let's go ahead with that

523
00:33:38.340 --> 00:33:38.670
first.

524
00:33:38.670 --> 00:33:41.100
I want to start by using the height map

525
00:33:41.110 --> 00:33:44.050
to create a displacement on the shader for that.

526
00:33:44.050 --> 00:33:46.010
The work we have to make sure that the shader

527
00:33:46.010 --> 00:33:48.360
has enough geometry in the mesh to work with.

528
00:33:48.840 --> 00:33:52.770
Therefore the plane geometry is already subdivided a bunch of times.

529
00:33:53.540 --> 00:33:57.260
And on top of that I'm using a subdivision modifier.

530
00:34:00.540 --> 00:34:03.220
You can set a different level for the view port in the

531
00:34:03.220 --> 00:34:07.860
rendering to control how much geometry has generated for the final render.

532
00:34:08.840 --> 00:34:09.050
Mhm.

533
00:34:10.940 --> 00:34:11.650
Alternatively,

534
00:34:11.650 --> 00:34:16.670
you can also turn on the experimental feature set in the render settings

535
00:34:18.139 --> 00:34:20.750
and then use the adaptive subdivision

536
00:34:21.440 --> 00:34:24.949
that will take into account how far away the cameras from the object

537
00:34:24.960 --> 00:34:30.540
and then Tessalit the geometry so that one pixel has approximately one polygon.

538
00:34:30.580 --> 00:34:33.260
We can change the dicing scale for that here.

539
00:34:33.639 --> 00:34:37.750
But for a better preview, I like to have a constant subdivision

540
00:34:38.340 --> 00:34:40.050
that is not dependent on the camera.

541
00:34:42.340 --> 00:34:43.580
So I just keep it like this.

542
00:34:44.139 --> 00:34:47.330
Then to be able to use displacement with the shader.

543
00:34:47.330 --> 00:34:49.480
We have to go into the material properties,

544
00:34:49.489 --> 00:34:52.170
scroll down to the displacement settings

545
00:34:52.739 --> 00:34:55.560
And change the displacement. Type two.

546
00:34:55.940 --> 00:34:58.760
Either displacement only or displacement. And bump

547
00:34:59.440 --> 00:35:03.460
here. I am not planning to use a bump map on top, but only the height map.

548
00:35:03.950 --> 00:35:05.800
So I'm just going to choose this placement and bumped

549
00:35:05.800 --> 00:35:08.360
to drive both at the same time with one map.

550
00:35:08.940 --> 00:35:11.250
And now that the shader is ready for displacement,

551
00:35:11.640 --> 00:35:15.060
we can simply create a displacement known in the notary

552
00:35:16.540 --> 00:35:18.460
and use the height map is the input.

553
00:35:19.340 --> 00:35:24.170
And then we can simply select the displacement factory to the displacement output.

554
00:35:26.240 --> 00:35:28.540
And now you can see that even even now because we

555
00:35:28.540 --> 00:35:31.770
selected displacement and bump for the control of the height map,

556
00:35:31.780 --> 00:35:35.060
we have a nice normal map depending on the height map.

557
00:35:35.440 --> 00:35:38.170
And if we go into cycles around the view,

558
00:35:38.640 --> 00:35:40.670
you can see the displacement is already working.

559
00:35:41.240 --> 00:35:42.960
The problem right now is though

560
00:35:43.110 --> 00:35:44.960
that this is obviously way too strong.

561
00:35:45.540 --> 00:35:47.250
one thing you have to keep in mind though

562
00:35:48.040 --> 00:35:52.340
is that the strength and height of these is independent from

563
00:35:52.340 --> 00:35:55.260
the scale for the width and length that you select here.

564
00:35:58.340 --> 00:36:01.940
So if you might have a largest scale for these parameters,

565
00:36:01.950 --> 00:36:04.320
this height might not be as much.

566
00:36:04.320 --> 00:36:06.950
So you have to control both individually.

567
00:36:07.830 --> 00:36:14.750
But for now I want to change the scale to a way lower number about 0.05.

568
00:36:15.230 --> 00:36:18.850
And also I want to adjust the mid level parameter.

569
00:36:19.330 --> 00:36:24.130
This is the value of the height map that would result in

570
00:36:24.140 --> 00:36:27.750
no displacement at all and thus stay at the same level.

571
00:36:28.330 --> 00:36:32.650
Every value above that will displace the geometry along the

572
00:36:32.650 --> 00:36:37.350
normal axis in the positive direction and every value below that

573
00:36:37.730 --> 00:36:39.680
Will displace it into a negative direction.

574
00:36:39.890 --> 00:36:43.340
So as the middle level right now is 0.5.

575
00:36:43.830 --> 00:36:49.040
We have a displacement in both directions from the initial level of the plane.

576
00:36:49.050 --> 00:36:53.160
What I want here is just have a displacement in the positive direction

577
00:36:53.730 --> 00:36:56.200
and have the level of the gaps between the boards,

578
00:36:56.450 --> 00:36:57.850
stay at the same position.

579
00:36:58.330 --> 00:37:00.850
So what I'm going to choose for the mid level is zero

580
00:37:01.930 --> 00:37:03.870
and now everything is just displaced

581
00:37:04.020 --> 00:37:04.450
up.

582
00:37:05.030 --> 00:37:08.450
Also, I want to be able to control the profile of this edge

583
00:37:09.030 --> 00:37:13.460
right now it is just straight linear because that is what the height map returns

584
00:37:14.330 --> 00:37:16.980
and therefore I can just use an RGB

585
00:37:16.980 --> 00:37:20.660
curves node to exactly control how this profile looks

586
00:37:29.030 --> 00:37:29.450
next.

587
00:37:29.450 --> 00:37:31.330
I want to create some more interest to this

588
00:37:31.330 --> 00:37:34.960
height map by adding variations between the different boards.

589
00:37:36.130 --> 00:37:38.350
There are two things I want to do for this height map.

590
00:37:39.220 --> 00:37:42.040
I want to tilt these boards randomly

591
00:37:42.430 --> 00:37:46.750
and also I want to create a band that goes from the inside out.

592
00:37:47.230 --> 00:37:48.750
So let's start with the tilt.

593
00:37:49.330 --> 00:37:53.350
I'm going back to the V. View to have a better faster preview

594
00:37:53.830 --> 00:37:55.960
and then I'm going to create a tilt map.

595
00:37:56.530 --> 00:37:58.180
What I want to achieve this

596
00:37:58.730 --> 00:38:01.880
is have a simple gradient that is linear

597
00:38:02.620 --> 00:38:03.180
along

598
00:38:03.290 --> 00:38:04.840
each individual board

599
00:38:05.320 --> 00:38:06.840
in a random direction

600
00:38:07.620 --> 00:38:12.140
and to get that I can simply take the sell you the output that we have

601
00:38:12.450 --> 00:38:14.940
and then adjust that to be used as the tilt map,

602
00:38:16.120 --> 00:38:20.650
I'm going to add a vector math node and subtract 0.5

603
00:38:21.320 --> 00:38:23.950
in both. Accent why to have it centered.

604
00:38:26.620 --> 00:38:28.750
And then I'm gonna add a

605
00:38:30.620 --> 00:38:32.030
back to rotate. Known,

606
00:38:32.820 --> 00:38:34.700
rotating around these axes.

607
00:38:35.620 --> 00:38:37.840
And as you can see we have a nice rotation here.

608
00:38:38.920 --> 00:38:41.300
The problem with this is that the rotation is

609
00:38:41.310 --> 00:38:44.950
schooled because the vectors are stretched along the boards

610
00:38:45.720 --> 00:38:48.750
so to have an accurate representation of this rotation,

611
00:38:49.120 --> 00:38:53.170
we should first take the dimension of these boards into account.

612
00:38:53.180 --> 00:38:56.250
You can simply do that by using the dimension vector

613
00:38:56.920 --> 00:38:58.650
and multiplying it on top.

614
00:38:59.120 --> 00:39:00.830
And if we rotated after

615
00:39:01.320 --> 00:39:04.650
you can see that the rotation looks much more accurate. Now.

616
00:39:06.920 --> 00:39:10.760
Now we simply have to randomize this angle input to

617
00:39:10.760 --> 00:39:13.440
have a random rotation for each cell for that.

618
00:39:13.440 --> 00:39:16.750
We can simply grab one of the random values that we have.

619
00:39:17.120 --> 00:39:21.140
I just use a separate RgB no to separate the random color that we get

620
00:39:21.520 --> 00:39:25.030
and we can just plug this into the angle of the vector of take note.

621
00:39:25.420 --> 00:39:30.450
Now the randomness of this value for the angle is between zero and 1.

622
00:39:31.020 --> 00:39:37.320
But we want to be able to have Iran and rotation between 0° and 360°.

623
00:39:37.610 --> 00:39:39.540
Despite the values

624
00:39:40.020 --> 00:39:44.840
that you can type in here being in degrees. When you plug something in

625
00:39:45.320 --> 00:39:48.590
the value that is taken is used in radiance,

626
00:39:49.120 --> 00:39:51.540
which is another form of describing angles.

627
00:39:52.320 --> 00:39:54.670
If you're not quite sure how to convert them,

628
00:39:54.890 --> 00:39:56.680
you can just use a math node

629
00:39:57.120 --> 00:40:00.440
And convert to Arabians or 2°

630
00:40:00.910 --> 00:40:02.540
But I can just tell you that

631
00:40:02.710 --> 00:40:05.830
360° translate into

632
00:40:06.310 --> 00:40:07.330
two pi.

633
00:40:08.110 --> 00:40:11.380
So what I'm going to do is multiply the Iran of value

634
00:40:11.390 --> 00:40:15.130
with the maximum angle that I want which is two pi.

635
00:40:15.610 --> 00:40:18.430
I can just type that in two times pi

636
00:40:19.710 --> 00:40:21.530
Which is about 6.3

637
00:40:22.010 --> 00:40:26.280
and now we have total randomness from no rotation at

638
00:40:26.280 --> 00:40:29.830
all to a full rotation and everything in between.

639
00:40:30.310 --> 00:40:32.560
So the last thing we have to do to get our tilt

640
00:40:32.560 --> 00:40:36.730
map is just separate this vector map into a single gradient.

641
00:40:37.310 --> 00:40:39.340
This can be either X or Y.

642
00:40:39.340 --> 00:40:42.530
That doesn't really matter because they're just rotated by 90°.

643
00:40:43.010 --> 00:40:46.640
And now we only have to combine this tilt map with our height map.

644
00:40:47.100 --> 00:40:50.130
The operation I want to use here is multiply

645
00:40:50.910 --> 00:40:54.330
because I don't want the edges between the boards

646
00:40:55.010 --> 00:40:57.740
to be offset by using an ad operation.

647
00:40:58.110 --> 00:41:00.950
I want them all to be exactly still at zero.

648
00:41:00.960 --> 00:41:04.710
After adding the tilt map and if I just use the multiple aberration,

649
00:41:04.710 --> 00:41:06.140
that is exactly what happens.

650
00:41:07.510 --> 00:41:12.430
The only problem is that a lot of these values are in the negative range

651
00:41:13.210 --> 00:41:15.430
and if I multiply with negative values.

652
00:41:15.910 --> 00:41:18.520
My height map will also go into the negative range

653
00:41:19.010 --> 00:41:20.530
and then this is what you get.

654
00:41:22.490 --> 00:41:25.520
The edges between the boards are still at zero.

655
00:41:25.540 --> 00:41:28.230
But some of the boards themselves are below that

656
00:41:29.210 --> 00:41:30.320
which is not what we want.

657
00:41:30.910 --> 00:41:35.310
So let's add some operations to change how to apply this tilt map first.

658
00:41:35.310 --> 00:41:38.490
I'm going to add another multiply node because they want to be able to

659
00:41:38.490 --> 00:41:43.650
control the strength and at this stage here they are still centered around zero.

660
00:41:43.660 --> 00:41:46.440
So I can nicely scale them around zero.

661
00:41:50.410 --> 00:41:53.440
And then afterwards I want to add one

662
00:41:54.210 --> 00:41:59.240
Because then these values are centered around one and 1

663
00:41:59.610 --> 00:42:05.260
when multiplied to another value does not change that value. So we'll have some.

664
00:42:05.270 --> 00:42:11.310
So this multiplication here will scale some places of the map up and some down

665
00:42:11.800 --> 00:42:13.480
but never below zero.

666
00:42:13.630 --> 00:42:16.320
So if I just plug this into the displacement map

667
00:42:16.700 --> 00:42:18.740
and go into cycles around the view,

668
00:42:18.750 --> 00:42:23.720
you can see how it can control the displacement and the scale of this tilt.

669
00:42:24.300 --> 00:42:25.730
With this multiply factor,

670
00:42:26.800 --> 00:42:30.500
I'll just add an input notes. So later on we still know that this is the value.

671
00:42:30.500 --> 00:42:31.420
We want to change.

672
00:42:33.500 --> 00:42:35.780
And now we already have some nice variation in

673
00:42:35.780 --> 00:42:37.930
the map that we can control with the parameter.

674
00:42:38.400 --> 00:42:40.920
The other variation that I told you I wanted to do

675
00:42:41.300 --> 00:42:43.610
is having a bend in the boards.

676
00:42:44.700 --> 00:42:48.620
So let's go back into the material preview and create a band map

677
00:42:49.000 --> 00:42:52.140
for this just as well. I use the cell U. V. S

678
00:42:52.370 --> 00:42:55.320
and start by centering them with a subtraction

679
00:42:57.800 --> 00:42:58.010
mm.

680
00:43:02.700 --> 00:43:08.430
Now I want to have a radial gradient from the center outwards to create the band map.

681
00:43:08.900 --> 00:43:13.930
You could also just use the white corner of this vector map to get a straight gradient

682
00:43:14.400 --> 00:43:16.320
but I want it a little bit more around here

683
00:43:17.200 --> 00:43:20.040
and to get a radial gradient that shows me

684
00:43:20.040 --> 00:43:23.430
the distance of the vector map to the center.

685
00:43:23.900 --> 00:43:26.120
I could just use the length operation

686
00:43:26.500 --> 00:43:28.620
to get the length of those factories.

687
00:43:29.500 --> 00:43:32.700
Now this is very much stretched along the y axis.

688
00:43:32.710 --> 00:43:36.220
So let's add in uh multiply node in between.

689
00:43:37.900 --> 00:43:39.610
So we were able to control

690
00:43:40.000 --> 00:43:43.120
how the Y and X. X. Is are stretched.

691
00:43:45.200 --> 00:43:48.230
Then I want to be able to control the profile of this band.

692
00:43:48.600 --> 00:43:50.820
So I just add another RGB curves. Note

693
00:43:51.300 --> 00:43:52.920
I wanted to be a little bit smoother

694
00:43:53.400 --> 00:43:54.510
on both sides

695
00:43:56.000 --> 00:43:57.920
so I create the gradient like this

696
00:43:58.900 --> 00:44:03.310
and then we have our band map and then we already have our band map finished

697
00:44:03.690 --> 00:44:07.800
this, we can now add in the exact same way as we did with the tilt map

698
00:44:09.390 --> 00:44:11.610
and just duplicate the notes out for this

699
00:44:12.290 --> 00:44:13.810
and reconnect the notes

700
00:44:16.790 --> 00:44:18.610
and then connected to the band map.

701
00:44:21.590 --> 00:44:23.150
Let's take a look how this

702
00:44:23.470 --> 00:44:24.500
is turning out

703
00:44:25.790 --> 00:44:26.810
and there we go.

704
00:44:27.190 --> 00:44:30.220
Get a very very strong bend going on right now

705
00:44:30.790 --> 00:44:33.360
it looks like they are not smooth on the outside

706
00:44:33.370 --> 00:44:37.600
which is probably because the values of this length output

707
00:44:37.990 --> 00:44:42.540
Are only going into a length of approximately 0.5 instead of one.

708
00:44:42.550 --> 00:44:46.110
So to change this and have better control with the RGB curves. Note

709
00:44:46.690 --> 00:44:49.210
just adjust the multiply values here

710
00:44:50.090 --> 00:44:52.420
And just multiply both with two

711
00:44:53.990 --> 00:44:55.420
to get into the higher values

712
00:44:57.690 --> 00:45:00.510
and now we have much better control with the RgB curves. Note

713
00:45:03.690 --> 00:45:05.910
but of course this is way too strong

714
00:45:08.590 --> 00:45:10.510
so that's just two and down this factor

715
00:45:11.580 --> 00:45:13.500
I want a more subtle bend.

716
00:45:14.390 --> 00:45:18.080
Now these effects are still quite strong but I just want to

717
00:45:18.080 --> 00:45:21.800
show how they work and we can still adjust the values later on

718
00:45:22.490 --> 00:45:26.210
and now we have some nice variation in the general height map of this shader.

719
00:45:26.890 --> 00:45:31.110
Another thing I want to do here to create some more interest to these edges

720
00:45:31.690 --> 00:45:35.920
is create some variation in how strong this bevel is

721
00:45:36.590 --> 00:45:41.510
because all of these values here are dry viable with inputs.

722
00:45:42.390 --> 00:45:44.720
You can just as well use a noise texture

723
00:45:45.090 --> 00:45:48.000
and drive these values with an actual noise.

724
00:45:48.690 --> 00:45:51.920
So that's simply do this by adding nice texture

725
00:45:53.490 --> 00:45:55.500
using the same UV coordinates

726
00:45:57.690 --> 00:45:59.100
and mapping

727
00:46:00.280 --> 00:46:02.290
the noise to another range

728
00:46:03.280 --> 00:46:05.910
that reflects how we want the battle to look

729
00:46:06.880 --> 00:46:11.590
Right now the Bevel is 0.02 and because this input is

730
00:46:11.590 --> 00:46:14.560
going to be overwritten with the map that we are using.

731
00:46:14.570 --> 00:46:17.200
I'm going to create a new parameter input.

732
00:46:18.880 --> 00:46:20.710
This, I'm just going to put two

733
00:46:21.080 --> 00:46:22.490
.02 for now.

734
00:46:23.380 --> 00:46:26.590
There are different ways to map this bevel value

735
00:46:26.590 --> 00:46:28.600
to a new range with the map range known.

736
00:46:29.080 --> 00:46:32.710
But here I want to very simply use a math nerd

737
00:46:32.920 --> 00:46:38.100
set to multiply to practically create a new maximum of this value.

738
00:46:43.480 --> 00:46:44.910
And as you can see

739
00:46:45.280 --> 00:46:47.590
that way we can create some nice variation

740
00:46:48.680 --> 00:46:50.500
and now we can still control

741
00:46:51.180 --> 00:46:54.210
how big this bevel effect is with this parameter.

742
00:46:54.680 --> 00:46:58.210
Next let's get into actually adding some color to this shader.

743
00:46:58.980 --> 00:47:04.310
I want to create the wooden texture in a very similar way that I did for the world work.

744
00:47:04.310 --> 00:47:05.000
For example,

745
00:47:05.580 --> 00:47:08.260
the only difference here is that this shader is

746
00:47:08.260 --> 00:47:11.210
only operating with a two dimensional vector space.

747
00:47:11.880 --> 00:47:15.990
So instead of creating the rings as cylinders,

748
00:47:16.000 --> 00:47:19.710
I'm just going to create a simple repeating pattern

749
00:47:20.280 --> 00:47:20.520
here.

750
00:47:20.520 --> 00:47:22.130
I want the pattern of the wood to be

751
00:47:22.140 --> 00:47:25.590
actually independent of the individual scale of the board.

752
00:47:26.280 --> 00:47:30.000
So instead of using any of the outputs of the board texture,

753
00:47:30.380 --> 00:47:32.300
I'm using the actual UV map.

754
00:47:33.380 --> 00:47:36.190
I'm just going to use a separate X Y Z note

755
00:47:36.410 --> 00:47:39.410
and grab the record is to look at the X. Component.

756
00:47:40.180 --> 00:47:43.310
Now I'm just going to use the same old trick that we used a bunch of

757
00:47:43.310 --> 00:47:46.590
times in this course already by just multiplying

758
00:47:46.590 --> 00:47:49.210
with a number that gives me a frequency

759
00:47:50.080 --> 00:47:52.800
And then using the ping pong operation

760
00:47:52.910 --> 00:47:54.400
set to a scale of one

761
00:47:55.380 --> 00:47:58.680
and now this value here is a nice indicator for

762
00:47:58.680 --> 00:48:01.080
the number of brings that we're going to get.

763
00:48:02.170 --> 00:48:04.840
I'm just going to add a value input node

764
00:48:05.570 --> 00:48:06.590
and connected to that.

765
00:48:07.770 --> 00:48:09.390
No I'm going to set this to like

766
00:48:09.770 --> 00:48:10.790
150

767
00:48:12.670 --> 00:48:17.290
and now the crucial part I want to add some distortion to this

768
00:48:18.270 --> 00:48:20.280
to have something that looks like wood.

769
00:48:21.370 --> 00:48:25.690
So what I'm doing is distorting these vector inputs with a noise texture

770
00:48:26.670 --> 00:48:29.580
and for now I'm not going to use the same UV map

771
00:48:30.170 --> 00:48:34.090
and then distort the coordinates that the pattern is using

772
00:48:34.470 --> 00:48:37.290
using a mix. RgB notes set to linear light.

773
00:48:40.870 --> 00:48:45.580
This effect is the way too strong right now. So let's go for something like 0.05

774
00:48:47.970 --> 00:48:51.590
and then slightly adjust there's noise tax too.

775
00:48:52.570 --> 00:48:54.370
But another thing I want to do here is

776
00:48:54.380 --> 00:48:57.700
changing the aspect ratio of this noise texture.

777
00:48:59.570 --> 00:49:01.410
You will see what effect that creates.

778
00:49:01.970 --> 00:49:04.280
Just use another vector math. Known

779
00:49:04.670 --> 00:49:06.200
set to multiply

780
00:49:06.770 --> 00:49:09.170
and then squash it on the X axis is

781
00:49:09.440 --> 00:49:11.200
by increasing the X value here.

782
00:49:12.170 --> 00:49:14.900
And this looks a lot more like what we are going for.

783
00:49:15.370 --> 00:49:17.290
The only problem with this now is

784
00:49:18.770 --> 00:49:23.290
that it's a complete pattern that goes over the whole surface

785
00:49:23.770 --> 00:49:27.090
which is not realistic when you have individual floorboards.

786
00:49:27.570 --> 00:49:30.500
They should not be connected to their pattern.

787
00:49:31.370 --> 00:49:32.900
So what we have to do is

788
00:49:33.670 --> 00:49:37.400
the couple the victories of the individual cells

789
00:49:38.270 --> 00:49:40.580
and there is a very simple way to do this.

790
00:49:41.270 --> 00:49:43.350
We can just on top of this

791
00:49:44.270 --> 00:49:47.090
coordinate that we are using for the distortion,

792
00:49:50.570 --> 00:49:52.400
add a random RGB

793
00:49:52.970 --> 00:49:53.900
for each cell.

794
00:49:55.670 --> 00:49:56.690
And as you can see

795
00:49:57.570 --> 00:50:01.890
as this shifts the factory map for each individual cell.

796
00:50:02.360 --> 00:50:04.280
We get a different distortion

797
00:50:04.760 --> 00:50:06.080
depending on the cell

798
00:50:06.660 --> 00:50:08.580
and that is exactly what we want.

799
00:50:09.160 --> 00:50:12.880
And this then is going to be the base pattern of the wood texture

800
00:50:13.660 --> 00:50:17.380
and that is the base pattern for the wooden texture. Almost done.

801
00:50:17.960 --> 00:50:22.780
What I want to do now is the same thing as I did for the woodwork for example.

802
00:50:23.260 --> 00:50:27.490
I'm going to add some variation in this pattern by using a map range note

803
00:50:30.060 --> 00:50:32.710
instead of adding another noise texture for this,

804
00:50:32.970 --> 00:50:35.070
I can just grab the one I already have

805
00:50:36.260 --> 00:50:38.990
and just use a separate RGB node

806
00:50:39.210 --> 00:50:44.390
to use another channel than the one that is used for the distortion which is just the

807
00:50:44.760 --> 00:50:45.780
red channel.

808
00:50:46.960 --> 00:50:50.580
Because the only information that we take from this distorted coordinate map

809
00:50:50.960 --> 00:50:52.690
is the X. Value.

810
00:50:53.160 --> 00:50:55.610
That means that the distortion in the Y and Z

811
00:50:55.620 --> 00:50:58.380
components don't even play a role for this pattern,

812
00:50:58.860 --> 00:51:02.290
which means the green and blue slot of this noise texture

813
00:51:02.570 --> 00:51:04.080
are not used for the distortion.

814
00:51:04.560 --> 00:51:08.280
And that is why I want to use one of these for the remaining part

815
00:51:08.960 --> 00:51:10.640
because then it is disconnected.

816
00:51:12.660 --> 00:51:14.490
So let's choose the green channel

817
00:51:15.060 --> 00:51:17.490
and plug it into the two men and put

818
00:51:17.960 --> 00:51:22.490
that means that all the points that are previously on zero. I don't know

819
00:51:23.260 --> 00:51:28.270
exactly mapped to this noise which is between zero and one centered around 0.5.

820
00:51:29.060 --> 00:51:33.580
That means that all the values that were previously one are still one

821
00:51:34.060 --> 00:51:36.070
as this to max value. Is

822
00:51:36.580 --> 00:51:37.180
that one?

823
00:51:37.860 --> 00:51:40.070
That is quite convenient because now

824
00:51:40.460 --> 00:51:43.880
we can include this as well into the high texture

825
00:51:45.360 --> 00:51:46.580
and we always know

826
00:51:47.060 --> 00:51:51.680
that the maximum of these lines are always at exactly one.

827
00:51:52.660 --> 00:51:55.270
So if you just create an RGB curves note

828
00:51:56.960 --> 00:51:59.390
and make it nice and smooth at the top here.

829
00:52:00.350 --> 00:52:02.630
That means that it is going to be smooth and

830
00:52:02.630 --> 00:52:05.320
the height map as well because we always know that the

831
00:52:05.320 --> 00:52:09.540
maximum is mapped to this range and this is the last

832
00:52:09.540 --> 00:52:11.870
adjustment that I want to make to the height map.

833
00:52:12.950 --> 00:52:17.180
And I'm going to do it right after I control the profile of the height map

834
00:52:17.850 --> 00:52:19.470
using another multiply note

835
00:52:22.050 --> 00:52:25.770
and as you can see it just creates a nice and subtle variation.

836
00:52:26.950 --> 00:52:30.460
If you just take a look at that in the principal BSD F.

837
00:52:30.470 --> 00:52:33.070
With the normals, you can see that works nicely.

838
00:52:34.250 --> 00:52:38.870
It is still quite strong as is the displacement. So I'm probably just going to

839
00:52:39.550 --> 00:52:40.990
Lower this value here,

840
00:52:41.200 --> 00:52:42.760
Let's say .02.

841
00:52:43.350 --> 00:52:44.480
And this looks a lot better.

842
00:52:45.050 --> 00:52:48.110
But now we have created the base texture for the

843
00:52:48.110 --> 00:52:50.650
wood that we're also going to use for the color.

844
00:52:50.660 --> 00:52:53.770
Before we move on, I'm just going to group and name these.

845
00:52:55.450 --> 00:52:59.980
So now that is organized again, let's go ahead and create the actual column map.

846
00:53:02.350 --> 00:53:04.980
I'm just going to grab this output from this

847
00:53:05.350 --> 00:53:06.270
base pattern

848
00:53:06.850 --> 00:53:08.260
and create a color ramp

849
00:53:09.050 --> 00:53:12.070
and I'm simply going to choose some colors that are fitting.

850
00:53:12.550 --> 00:53:16.480
But instead of having just this very uniform color,

851
00:53:17.740 --> 00:53:19.980
I want to have some variation in the color as well.

852
00:53:20.450 --> 00:53:21.770
So what I'm going to do for that

853
00:53:22.250 --> 00:53:24.170
is just duplicate the color ramp

854
00:53:25.550 --> 00:53:28.570
and create some different color variation.

855
00:53:28.950 --> 00:53:32.570
So now we have two different color maps using the same base texture

856
00:53:33.050 --> 00:53:35.360
and what I want to do now for the variation

857
00:53:35.590 --> 00:53:36.880
is simply taking

858
00:53:37.450 --> 00:53:38.560
a mixer to be known

859
00:53:39.950 --> 00:53:41.180
to mix between them

860
00:53:41.550 --> 00:53:46.380
and as a factor I'm going to use another random value per cell

861
00:53:49.250 --> 00:53:51.010
for that. I'm just going to use

862
00:53:51.950 --> 00:53:53.570
another separate RgB known,

863
00:53:54.150 --> 00:53:55.670
grab the Iran and color.

864
00:53:56.450 --> 00:53:58.570
I'm just going to take the right channel

865
00:53:59.150 --> 00:54:01.360
to mix between the different colors Purcell

866
00:54:03.540 --> 00:54:05.170
and then we already have some variation.

867
00:54:06.640 --> 00:54:09.850
For now I want to do more of the color composition that I have planned

868
00:54:10.440 --> 00:54:11.390
for example.

869
00:54:11.400 --> 00:54:15.520
I want to also reflect the gradient that we used

870
00:54:15.520 --> 00:54:17.970
for the bending of the boards and the color.

871
00:54:18.440 --> 00:54:21.250
So we just have to take the band map.

872
00:54:21.260 --> 00:54:26.860
I'm going to add a new color ramp and then use this band map to connect it to it

873
00:54:27.240 --> 00:54:33.060
and this gradient and then combining with another mix RGB node set to overlay

874
00:54:35.040 --> 00:54:38.250
and as you can see this, add some more interest to the column map

875
00:54:39.440 --> 00:54:41.170
right now. The effect is too strong though.

876
00:54:41.940 --> 00:54:42.170
Mhm

877
00:54:43.040 --> 00:54:44.500
maybe more subtle like this.

878
00:54:45.540 --> 00:54:50.550
Another thing I want to do for the color is simply taking another overlay operation

879
00:54:51.540 --> 00:54:55.170
and using another random value per cell

880
00:54:55.940 --> 00:54:58.250
very nicely creates more variation.

881
00:54:59.040 --> 00:55:01.810
But here it is very important that you don't take the

882
00:55:01.810 --> 00:55:05.970
same random value as you took for combining the different color maps

883
00:55:06.440 --> 00:55:11.660
because that in this case would mean every board that is closer to this color

884
00:55:12.740 --> 00:55:18.260
also gets overlay with a darker value and every cell that is closer to this

885
00:55:18.740 --> 00:55:20.360
gets a brighter value instead

886
00:55:20.740 --> 00:55:24.850
and that means that there's variation works along the same axis

887
00:55:26.140 --> 00:55:28.260
to use a different random value instead

888
00:55:28.840 --> 00:55:32.670
that creates a different type of variation and is much more interesting.

889
00:55:33.640 --> 00:55:38.470
Another thing I want to do here is faking some ambient occlusion

890
00:55:38.840 --> 00:55:42.350
by making the color actually darker at the bottom of these values here.

891
00:55:43.140 --> 00:55:44.970
For that we can simply add

892
00:55:45.440 --> 00:55:46.970
a multiply node

893
00:55:47.840 --> 00:55:49.230
and multiply

894
00:55:49.530 --> 00:55:51.470
the plank profile that we have

895
00:55:51.840 --> 00:55:54.090
that generate some more interest the shader

896
00:55:54.100 --> 00:55:56.670
without using actual displacement in the preview.

897
00:55:57.040 --> 00:56:00.660
Looking at this now, with the color composition complete.

898
00:56:01.230 --> 00:56:05.040
I'm going to adjust the color ramps a little bit to get some nice colors in here

899
00:56:05.430 --> 00:56:08.660
at this point we are very far into the creation of the shader

900
00:56:09.430 --> 00:56:11.850
but there are a couple of more things that I want to do

901
00:56:13.130 --> 00:56:15.950
1st. We should create some variation in the roughness

902
00:56:16.930 --> 00:56:19.950
as this is a stylized version of a shader.

903
00:56:19.960 --> 00:56:24.550
This is not a super crucial step, but it's still something that I can recommend.

904
00:56:26.630 --> 00:56:28.250
Let's take a map range note

905
00:56:28.930 --> 00:56:31.540
and use this base pattern of the wood

906
00:56:32.030 --> 00:56:32.960
as a basis

907
00:56:34.130 --> 00:56:37.960
and then adjust the mapping to some values that make sense in our case

908
00:56:38.630 --> 00:56:41.860
here, on the lower values to have a higher roughness

909
00:56:42.930 --> 00:56:45.450
and the higher values to be a little bit smoother.

910
00:56:49.730 --> 00:56:53.540
And this is about what I'm going for us. So let's just plug this in

911
00:56:55.030 --> 00:56:57.900
to better see what the roughness is doing is

912
00:56:57.900 --> 00:57:00.960
a good idea to disconnect the base color first

913
00:57:01.330 --> 00:57:03.660
and go for a very dark color

914
00:57:04.030 --> 00:57:06.750
because then all you see is pretty much the reflection.

915
00:57:15.830 --> 00:57:17.960
And now that the basis looks about right.

916
00:57:18.530 --> 00:57:21.250
I want to add some variation here as well

917
00:57:21.930 --> 00:57:23.510
by also using

918
00:57:23.680 --> 00:57:25.250
an overlay operation

919
00:57:26.630 --> 00:57:31.750
and taking the third round of value that we get from the round of color output.

920
00:57:32.230 --> 00:57:34.200
This should be a very subtle variation though,

921
00:57:34.200 --> 00:57:36.660
as you can see right now is way too strong

922
00:57:42.430 --> 00:57:45.040
but it also adds some more interest to the shader.

923
00:57:45.730 --> 00:57:48.340
So now let's just plug the color back in

924
00:57:50.130 --> 00:57:56.160
and what we have here is the very basis of the would completely finished.

925
00:57:57.330 --> 00:57:59.160
But there are two more things. I want to add

926
00:57:59.530 --> 00:58:00.260
the first thing,

927
00:58:00.260 --> 00:58:02.020
I want to add some more detail to the wood

928
00:58:02.020 --> 00:58:05.650
itself by adding four bolts to the boards in the corners

929
00:58:07.220 --> 00:58:10.470
for that. Again I take the cell, U. V. S.

930
00:58:14.520 --> 00:58:19.280
And just as the other times i subtract 0.5 in both accent why?

931
00:58:19.280 --> 00:58:21.150
To center the Coordinate Map.

932
00:58:24.510 --> 00:58:28.040
And I'm also going to scale the vector map by two

933
00:58:28.720 --> 00:58:32.340
To make sure that it goes from 0 to 1 from the inside out.

934
00:58:32.820 --> 00:58:37.040
Then I also want to take into account the dimension of this vector map.

935
00:58:37.820 --> 00:58:41.240
So I'm going to multiply it with the dimension vector

936
00:58:42.920 --> 00:58:45.830
that takes into account the width and length of the boards.

937
00:58:46.320 --> 00:58:48.410
So now the corners are not stretched.

938
00:58:48.620 --> 00:58:50.410
I want to create the bolts in

939
00:58:50.600 --> 00:58:52.140
each one of these corners

940
00:58:53.220 --> 00:58:53.770
and

941
00:58:54.040 --> 00:58:56.640
every corner is going to be the exact same.

942
00:58:57.320 --> 00:58:58.540
So at this point

943
00:58:59.220 --> 00:59:03.450
I can actually use another vector math set to absolute

944
00:59:06.720 --> 00:59:10.950
because this is going to mirror both the X and y coordinate.

945
00:59:11.820 --> 00:59:15.000
And now each one of these four quarters of each board

946
00:59:15.360 --> 00:59:16.950
has the same coordinate map.

947
00:59:17.820 --> 00:59:20.150
So whatever we do with this map now

948
00:59:20.620 --> 00:59:22.150
it's going to be mirrored

949
00:59:22.820 --> 00:59:27.830
at the next step. I want to specify where the center of the bolts is going to be

950
00:59:28.520 --> 00:59:30.740
for that. I just use a subtract note

951
00:59:37.620 --> 00:59:39.400
and as you can see the shift

952
00:59:40.120 --> 00:59:44.440
the center of the coordinates in each individual quarter outwards.

953
00:59:45.020 --> 00:59:50.150
This gets a little bit more clear when I add another vector math notes, set to length

954
00:59:52.820 --> 00:59:55.970
and now we can see that these dark spots are the

955
00:59:55.980 --> 00:59:59.330
center of the coordinate maps in each one of the quarters

956
01:00:02.110 --> 01:00:03.880
and here we can nicely adjust

957
01:00:04.120 --> 01:00:05.940
where the center is going to sit.

958
01:00:06.410 --> 01:00:09.530
Now this is pretty much exactly already what we want,

959
01:00:09.540 --> 01:00:12.020
having these bolts in each one of these corners.

960
01:00:13.210 --> 01:00:17.640
But now if we adjust the parameters of the no group,

961
01:00:18.810 --> 01:00:21.280
these bolts are still going to stay in place

962
01:00:21.440 --> 01:00:22.740
and not adjust with it.

963
01:00:24.410 --> 01:00:26.030
So I want to do something else.

964
01:00:26.050 --> 01:00:29.930
Instead of choosing where these bolts are going to sit manually,

965
01:00:30.810 --> 01:00:33.830
I'm going to take into account the dimension vector. Again,

966
01:00:35.110 --> 01:00:37.140
I'm just going to add a rewrite known

967
01:00:39.010 --> 01:00:40.030
and then simply

968
01:00:40.510 --> 01:00:42.940
for now subtract that vector instead.

969
01:00:44.210 --> 01:00:45.020
And now

970
01:00:45.610 --> 01:00:49.830
the centers are sitting exactly in the corner of the boards

971
01:00:50.210 --> 01:00:51.320
as you can see here

972
01:00:54.010 --> 01:00:56.940
and they're still adjusts with the parameters that we choose.

973
01:01:00.310 --> 01:01:02.020
So now the only thing left to do

974
01:01:03.410 --> 01:01:06.050
is subtract from this shifting vector

975
01:01:07.210 --> 01:01:10.930
and specify exactly where we want the corners to sit.

976
01:01:14.810 --> 01:01:18.020
And now we have pretty much the same pattern that we have before.

977
01:01:18.810 --> 01:01:20.240
But it adjusts nicely

978
01:01:20.610 --> 01:01:22.440
with the settings of the note group.

979
01:01:23.410 --> 01:01:27.240
So now the only thing left to do is to turn this into actual bolts

980
01:01:28.010 --> 01:01:31.640
for that, I'm just going to add a math known onto this length

981
01:01:33.810 --> 01:01:35.030
and divide

982
01:01:37.110 --> 01:01:38.940
by an input value that I can choose.

983
01:01:41.610 --> 01:01:42.740
And if I now

984
01:01:42.940 --> 01:01:45.630
add another Math notes said to less than

985
01:01:46.910 --> 01:01:49.730
And just choose the threshold is one. For example,

986
01:01:51.710 --> 01:01:56.380
you can see that with this parameter, I can choose the radius of these bolts

987
01:01:57.410 --> 01:02:00.230
and with the less than note, I get a nice mask.

988
01:02:00.900 --> 01:02:04.320
So now we have to mix these bolts into the rest of the shader.

989
01:02:04.800 --> 01:02:10.620
This is the simple mask that we have. So let's first quickly makes it into the color.

990
01:02:14.500 --> 01:02:16.320
Just using this mask

991
01:02:19.200 --> 01:02:20.610
and the mixed operation

992
01:02:27.200 --> 01:02:29.620
and we can do the same thing for the roughness as well.

993
01:02:38.200 --> 01:02:38.430
Mhm.

994
01:02:39.900 --> 01:02:44.310
Also we can simply use this mask and plug it into the metallic input.

995
01:02:45.680 --> 01:02:50.800
The last thing that we have to take care of, which is why it's looking quite off.

996
01:02:50.800 --> 01:02:52.730
Here is the height map.

997
01:02:54.200 --> 01:02:57.020
We can simply modify the base height map

998
01:02:57.500 --> 01:02:58.610
with a math No. To

999
01:03:01.100 --> 01:03:03.430
let's just take a maximum operation

1000
01:03:04.880 --> 01:03:06.930
and simply choose the mask

1001
01:03:08.900 --> 01:03:12.430
So that the bolts are actually mapped to exactly one

1002
01:03:13.000 --> 01:03:18.930
and all the wooden texture that scaled it down before is ignored in those places.

1003
01:03:19.300 --> 01:03:21.010
This is already looking much better.

1004
01:03:22.100 --> 01:03:25.520
The only thing I want to do is create a little bit of an edge around them

1005
01:03:26.200 --> 01:03:29.450
for that we can simply before the maximum operation,

1006
01:03:29.460 --> 01:03:33.430
choose a minimum operation to actually lower the values

1007
01:03:35.400 --> 01:03:37.730
and use this radio gradient.

1008
01:03:41.300 --> 01:03:45.320
I just choose the radio. Great in itself. This will not do anything.

1009
01:03:46.400 --> 01:03:50.320
And if I now deactivate the maximum operation for the bolts themselves,

1010
01:03:51.700 --> 01:03:54.930
you can see that I have this nice inset where the bolts are.

1011
01:03:56.800 --> 01:04:00.910
But the problem is it is exactly the size of the bulls themselves.

1012
01:04:01.990 --> 01:04:04.110
So that's brought in this area

1013
01:04:04.590 --> 01:04:05.420
by just

1014
01:04:06.790 --> 01:04:09.220
by just subtracting a value from this gradient

1015
01:04:12.590 --> 01:04:13.610
and as you can see

1016
01:04:14.590 --> 01:04:15.720
it gets wider,

1017
01:04:16.390 --> 01:04:20.500
I'd simply reactivate the maximum operation to get the bolts back

1018
01:04:21.490 --> 01:04:23.320
and there we go. Now we have a nice

1019
01:04:23.460 --> 01:04:24.910
edge around these bolts.

1020
01:04:27.980 --> 01:04:31.010
You can still tweak the positioning of the bolts

1021
01:04:33.190 --> 01:04:34.640
and their size.

1022
01:04:36.490 --> 01:04:38.610
But yeah, this is the main shader done.

1023
01:04:39.790 --> 01:04:42.710
There is one very last thing that I want to do though,

1024
01:04:43.060 --> 01:04:43.590
which is

1025
01:04:43.760 --> 01:04:45.910
adding some dust on the edges

1026
01:04:46.490 --> 01:04:49.510
for that. I'm just going to add a diffuse shader

1027
01:04:50.990 --> 01:04:52.510
and mix it into it.

1028
01:04:55.890 --> 01:04:56.810
I'm just taking

1029
01:04:57.590 --> 01:04:59.110
a grungy color.

1030
01:05:00.990 --> 01:05:01.660
We can

1031
01:05:01.860 --> 01:05:03.600
simply blend into it.

1032
01:05:04.090 --> 01:05:05.920
Now we have to create the mask for this.

1033
01:05:06.390 --> 01:05:09.300
I'm just going to grab the UV coordinates again,

1034
01:05:12.090 --> 01:05:16.410
Centre them by subtracting 0.5 in both X&Y direction.

1035
01:05:19.390 --> 01:05:23.500
Scale them up so they are from zero to run from the center outwards.

1036
01:05:24.090 --> 01:05:26.910
Then I'm going to add an absolute operation

1037
01:05:27.790 --> 01:05:29.410
to mirror the whole thing

1038
01:05:31.590 --> 01:05:35.220
and separate the individual components with a separate X Y Z. Noted.

1039
01:05:36.590 --> 01:05:39.690
This is very much the same technique that we use to create

1040
01:05:39.690 --> 01:05:43.010
the height map within the note group for the wooden boards.

1041
01:05:43.390 --> 01:05:46.920
So what I'm going to adhere as a smooth maximum operation

1042
01:05:50.090 --> 01:05:53.300
and this way you can create a nice smooth gradient like this

1043
01:05:56.190 --> 01:06:00.900
and now we can use a map range node to map this to be the mosque

1044
01:06:01.580 --> 01:06:02.710
for this mix trader.

1045
01:06:03.580 --> 01:06:06.790
This effect is quite subtle what it adds to the shader.

1046
01:06:08.780 --> 01:06:12.590
I only want to create some more variation because right now it's very uniform.

1047
01:06:13.280 --> 01:06:15.440
So before using the map range note

1048
01:06:15.830 --> 01:06:17.990
I'm also going to add a noise texture.

1049
01:06:23.180 --> 01:06:27.800
I'm simply going to use the mixer to be known with the linear light operation

1050
01:06:28.580 --> 01:06:32.090
and with this now we can create some nice variation in the mosque.

1051
01:06:33.280 --> 01:06:34.900
She also makes it more interesting

1052
01:06:37.780 --> 01:06:41.910
and there we go. That is the whole chitter done from start to finish.

1053
01:06:42.480 --> 01:06:44.490
Let's see how this looks in the rendered view.

1054
01:06:45.880 --> 01:06:48.220
And the nice thing about the way that we set this

1055
01:06:48.220 --> 01:06:52.900
up obviously is that everything is still adjustable with the parameters

1056
01:06:58.380 --> 01:07:01.700
and you can use this note group to create all sorts of

1057
01:07:01.910 --> 01:07:02.910
other shakers

1058
01:07:03.280 --> 01:07:06.910
that are also relying on something similar to this brick structure.

1059
01:07:08.280 --> 01:07:09.930
We'll show you how to create this shooter.

1060
01:07:09.930 --> 01:07:11.860
I have not taken the time to make small

1061
01:07:11.860 --> 01:07:14.810
adjustments and tweaks to make it look more appealing.

1062
01:07:14.820 --> 01:07:16.800
So I will just do that now.

1063
01:07:19.680 --> 01:07:20.000
Sure

1064
01:07:50.180 --> 01:07:50.930
and there we go.

1065
01:07:50.940 --> 01:07:53.350
I scale up the dimensions of the boards,

1066
01:07:53.360 --> 01:07:57.090
made the wood pattern a little bit less striking and little bit

1067
01:07:57.090 --> 01:08:01.190
smoother on the height map and also made the dust brighter.

1068
01:08:02.270 --> 01:08:05.500
Finally giving the surrender. Now this is what we get.

1069
01:08:10.770 --> 01:08:11.000
Yeah.

1070
01:08:11.770 --> 01:08:15.490
And now it looks a lot more like the reference of the example share

1071
01:08:16.069 --> 01:08:19.490
but there's one more thing that I have a different in the example scene

1072
01:08:19.970 --> 01:08:23.310
and I've also an example for a more advanced version

1073
01:08:23.310 --> 01:08:26.689
of the shader with fixed endings in the scene.

1074
01:08:27.270 --> 01:08:28.290
And as you can see,

1075
01:08:28.670 --> 01:08:32.609
this version also closes up these boards nicely where they

1076
01:08:32.609 --> 01:08:34.490
are cut off on the side of the plane.

1077
01:08:35.069 --> 01:08:37.590
One thing though that I have not talked about our

1078
01:08:37.600 --> 01:08:41.790
techniques to make the boards and exactly on the edge,

1079
01:08:43.069 --> 01:08:47.380
that would cry some more advanced manipulation of vectors and would only

1080
01:08:47.380 --> 01:08:51.189
have complicated everything more so we did not want to include here,

1081
01:08:51.870 --> 01:08:54.140
but there are different techniques to do so.

1082
01:08:54.330 --> 01:08:56.899
And one is in this example scene

1083
01:08:58.170 --> 01:09:02.100
using a modified version of the note group that we create is here

1084
01:09:02.470 --> 01:09:04.460
that has fixed endings.

1085
01:09:05.270 --> 01:09:09.290
As you can see all the boards nicely and on the edge of the plane.

1086
01:09:11.170 --> 01:09:15.279
But this is using some tricks and only works with some restrictions,

1087
01:09:15.970 --> 01:09:17.890
but it actually works quite nicely.

1088
01:09:20.370 --> 01:09:21.850
The reason why I didn't want to add it

1089
01:09:21.850 --> 01:09:25.229
to this video here is because it's quite elaborate.

1090
01:09:25.240 --> 01:09:26.930
If I take a look into the note group,

1091
01:09:26.930 --> 01:09:30.180
you can see that it's way more complicated than what we did.

1092
01:09:31.170 --> 01:09:34.140
If you feel confident enough to take a look at it, feel free to do.

1093
01:09:34.140 --> 01:09:37.100
So it's in the file that I'm uploading to this video.

1094
01:09:37.970 --> 01:09:40.399
And just to give you an idea of how it works.

1095
01:09:40.870 --> 01:09:42.000
The principle

1096
01:09:44.470 --> 01:09:49.500
is that I include more information about the dimension of these boards

1097
01:09:50.069 --> 01:09:53.189
in the vector map that I used to create the height map

1098
01:09:54.470 --> 01:10:00.290
and actually individual, take a look at how these boys are shortened on both ends

1099
01:10:01.170 --> 01:10:03.390
Of the UV Map, from 0 to 1.